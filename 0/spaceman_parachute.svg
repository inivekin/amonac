<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   id="svg869"
   width="566.32825"
   height="245.31448"
   viewBox="0 0 566.32825 245.31448"
   sodipodi:docname="spaceman_parachute.svg"
   inkscape:version="1.0.1 (unknown)">
  <style
     id="style842"></style>
  <metadata
     id="metadata875">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs873">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient889"
       gradientUnits="userSpaceOnUse"
       x="194.86227"
       y="173.33263">
      <meshrow
         id="meshrow891">
        <meshpatch
           id="meshpatch893">
          <stop
             path="c 202.177,0  404.354,0  606.531,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop895" />
          <stop
             path="c 0,81.7715  0,163.543  0,245.314"
             style="stop-color:#000000;stop-opacity:1"
             id="stop897" />
          <stop
             path="c -202.177,0  -404.354,0  -606.531,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop899" />
          <stop
             path="c 0,-81.7715  0,-163.543  0,-245.314"
             style="stop-color:#000000;stop-opacity:1"
             id="stop901" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1078"
     inkscape:window-height="1416"
     id="namedview871"
     showgrid="false"
     inkscape:zoom="3.2369001"
     inkscape:cx="135.04424"
     inkscape:cy="182.3111"
     inkscape:window-x="1080"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g881"
     inkscape:document-rotation="0"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0" />
  <g
     inkscape:groupmode="layer"
     inkscape:label="Image"
     id="g877"
     transform="translate(-194.86228,-173.33263)">
    <g
       id="g881"
       transform="matrix(-1,0,0,1,996.25554,0)"
       style="fill:url(#meshgradient889);fill-opacity:1">
      <path
         id="path887"
         style="fill:#9d9ea0;fill-opacity:1;stroke-width:1.33333"
         d="m 611.59724,402.60426 c -16.04264,-23.90882 -37.89883,-5.03754 -59.87132,-6.9202 -11.51421,-2.28321 -26.70357,7.22001 -35.93334,-2.44886 -17.95735,-15.32328 -35.71502,-31.06415 -49.36378,-50.49792 -14.9061,-18.08184 -15.23638,12.89809 -32.34226,14.57585 -11.30917,3.73555 -22.92479,11.37126 -35.19241,7.58584 -18.45807,-8.74868 -42.14136,13.86122 -53.15884,-8.85889 -27.39226,-15.70486 -56.48451,-28.67651 -82.59768,-46.71441 -20.24997,-6.56125 -38.80916,-23.47116 -25.44047,-45.51851 6.87612,-17.88163 16.68504,-42.05611 21.44896,-56.34996 18.31503,5.99331 38.85103,3.21009 58.06372,5.09837 33.72005,0.80657 67.74079,3.70085 101.19642,-0.74317 25.8777,-0.93607 52.78045,2.16375 77.66997,-6.01805 30.58223,-4.50353 62.69277,-2.16572 91.22622,-15.839 14.21201,-4.91589 27.95091,-11.06138 41.28146,-17.99878 13.38848,10.92851 24.28358,26.55962 41.13905,31.86379 17.7483,3.67274 23.77656,-35.96324 36.59565,-7.51939 13.12141,14.71274 27.19835,28.87162 12.11279,46.74987 3.43533,11.86489 -9.03642,30.1817 11.39247,27.34643 9.00508,4.33551 15.60682,13.88594 26.61566,12.24123 13.78519,1.69445 28.25447,0.84017 41.32679,5.81001 -14.53456,10.62652 -36.52946,15.26113 -54.33811,22.32519 -16.80645,0.0976 -18.93241,14.5042 -34.55438,2.68499 -12.4196,-1.83797 -30.20412,4.00264 -13.20646,11.80533 -2.7578,18.95373 -5.01761,40.22915 -19.20151,52.42886 -3.40574,14.63715 -20.19778,11.78028 -29.02508,15.76646 12.56766,27.29975 -26.25738,-29.35185 -16.01547,3.49796 3.83315,10.17391 3.95133,28.30719 -8.9169,13.82496 -3.67565,-2.67402 -7.30786,-5.40741 -10.91115,-8.178 z m 5.56347,-16.30436 c -4.45029,-15.65147 -11.14911,-18.06923 -9.22632,-1.77313 5.63519,7.68409 20.04976,23.43538 10.40674,4.51661 z m -71.79162,5.72777 c 7.22299,-2.94416 27.03859,0.18958 10.50602,-6.33597 -5.68678,-8.72691 -30.02556,8.99215 -11.85443,7.16201 l 1.34841,-0.82601 z m -18.13072,-9.9773 c 17.39447,-13.59166 -33.46012,-14.69516 -8.31823,-7.88611 4.14725,3.51177 -2.0579,22.20765 8.31823,7.88611 z m 50.95907,2.36692 c 8.15611,-8.19764 -24.33255,-21.71388 -9.27996,-4.85815 1.90744,2.95018 5.20575,10.18223 9.27996,4.85815 z m 11.77165,-13.71466 c -3.22467,-6.93129 -3.04641,4.68526 0,0 z m -53.0301,-9.74536 c 18.79656,-8.51098 -33.81482,-25.73639 -13.48307,-2.47958 3.35422,7.44652 7.49611,7.87647 13.48307,2.47958 z m -38.58232,-4.0209 c -9.18807,-8.34436 -21.94805,-3.75995 -7.70457,4.50474 10.14271,2.62094 29.12976,4.20125 7.70457,-4.50474 z m 74.76126,2.35424 c -5.36295,-6.94798 -0.0388,6.5431 0,0 z m -157.75525,-3.67626 c 12.57528,-11.00903 -26.42456,-2.08427 -6.0751,3.69672 l 2.56891,-1.17102 z M 369.9812,343.14763 c 15.61472,-18.6764 -24.62259,-17.49755 -36.53919,-26.21951 -32.55745,-11.5092 -64.71323,-24.42234 -98.06022,-33.49014 17.01345,15.88429 39.17289,27.04414 59.12053,39.58982 18.05658,12.44044 39.58051,18.82342 57.91991,29.19676 9.27504,7.54394 12.83127,-3.03948 17.55897,-9.07693 z m 28.46683,6.51364 c -4.15487,-7.00804 -24.87104,11.34805 -6.22821,2.70428 l 2.48311,-0.94518 z m 276.04941,4.41635 c 11.96651,-13.41124 -16.26419,-13.00228 -18.35582,-6.82152 5.71305,-2.62549 16.63737,11.49135 18.35582,6.82152 z m -240.52835,-3.45368 c -0.54766,-9.96276 -9.74909,8.75798 0,0 z m -55.51837,-4.24855 c 15.76261,-5.52236 1.40681,-18.95522 -3.11542,-3.16732 -4.81632,7.27206 -8.77968,13.16187 3.11542,3.16732 z m 16.3272,-5.34533 c 14.65325,-11.26447 -16.49273,9.06934 0,0 z m 23.19117,-3.94328 c -13.26445,-11.57493 -12.2713,18.63347 0,0 z m 14.0074,4.19565 c 4.32645,-12.43117 -17.68793,8.10493 0,0 z m 58.98079,0.64718 c 21.76658,-9.40823 -28.29461,-18.42273 -6.69466,0.68824 1.70736,2.54101 4.95309,-0.0303 6.69466,-0.68824 z m 25.67848,1.39524 c -6.98792,-11.24317 -29.33812,3.94307 -9.66667,0.5881 3.22084,-0.0946 6.49602,0.15498 9.66667,-0.5881 z m 167,-6.50978 c 10.85261,-21.34507 -13.17864,13.12779 -1.49244,2.25386 z m -12.33333,-1.52446 c -5.07625,-7.04592 -3.3286,5.99751 0,0 z M 406.59164,317.33486 c 11.61529,-7.1749 18.7619,-22.61633 -0.97591,-16.58944 -15.32592,11.43769 -26.53515,45.98946 -1.53608,19.10406 z m 146.04412,11.90999 c 0.73634,-11.7564 -15.04074,1.55805 0,0 z M 389.87369,313.94046 c 21.24417,-22.72506 -22.40889,-13.86463 -35.50128,-19.9535 -36.66663,-6.70908 -72.55436,-17.23159 -109.27044,-23.61746 -20.95708,11.40541 24.66398,17.26116 34.65602,22.90302 23.66824,7.07673 46.2548,18.10328 70.24836,23.68254 15.14069,-3.95495 30.2349,24.22562 39.86734,-3.0146 z m 35.36726,6.14159 c 10.71165,-1.52803 19.84152,-24.56351 4.51703,-9.17025 -6.7147,5.22725 -27.36231,19.93673 -4.51703,9.17025 z m 78.2471,1.1642 c -15.99959,-7.12306 -1.41803,7.76477 2.20157,1.83405 -0.73382,-0.61127 -1.4678,-1.2229 -2.20157,-1.83405 z m -52.93928,-9.19286 c -1.1372,-17.58569 -15.94853,6.93179 0,0 z m -23.96512,-6.08506 c 8.27268,-7.73194 -5.02691,-1.70711 -5.1687,3.15545 l 1.69049,-0.62549 z m 36.9044,-4.76339 c 6.07489,-8.23576 -14.70229,8.64218 0,0 z m 296.28336,-2.54833 c 8.01505,-1.63791 24.46924,-8.86328 5.90131,-6.11015 -10.15109,-4.20845 -24.7891,0.4093 -17.10301,9.43177 3.72208,-1.14679 7.46106,-2.23738 11.2017,-3.32162 z m -206.3657,-1.15054 c -9.6211,1.02418 4.91452,4.88482 0,0 z M 441.63576,282.16774 c 6.81162,-6.44098 21.63167,-18.97044 2.44934,-17.19838 -17.45724,-7.22046 -33.70598,23.44447 -31.71347,31.4748 9.23932,0.76865 18.19645,-0.12579 23.48339,-8.5678 1.92691,-1.90288 3.85383,-3.80575 5.78074,-5.70862 z m 7.70881,6.29465 c 11.50638,-3.38595 12.64143,-23.59614 1.08341,-8.23897 -9.46234,7.86729 -21.61865,24.58277 -1.08341,8.23897 z m 13.62452,5.82822 c -5.58926,-6.31193 -6.20844,6.67817 0,0 z m -51.07616,-12.47074 c 9.4841,-9.80566 10.28691,-18.56204 -6.00732,-15.56727 -16.27736,-5.96267 37.8722,-4.35362 17.05804,-11.4578 -45.30939,-0.13576 -91.07816,-1.35806 -134.93742,-14.02579 -15.59807,-4.16107 -35.88213,-15.59357 -37.25049,9.73662 -17.16999,21.272 20.80169,11.88298 33.72872,16.13169 20.13742,-0.34124 39.89196,-4.32805 60.18564,-2.29878 15.27547,3.01258 46.10737,-7.49948 51.87177,2.3356 -21.09309,1.06417 -42.11378,1.4562 -63.27559,2.42133 -18.4335,0.52495 -51.90553,-2.89406 -60.51117,0.93164 42.85373,10.76821 85.99598,22.91154 130.395,24.59683 2.91427,-4.26802 5.82855,-8.53605 8.74282,-12.80407 z m 66.5881,3.67987 c 0.99733,-14.18627 -22.34745,-2.42717 -5.1847,4.23402 2.71424,2.00973 4.84559,-2.41516 5.1847,-4.23402 z m 10.57505,3.98252 c 3.18952,-11.48909 -14.42462,3.08737 0,0 z m 228.32484,-14.23405 c -11.71065,-6.63602 2.96963,7.0927 0,0 z m -231.74453,-0.9576 c -8.24531,-7.94868 -2.73052,4.86407 0,0 z m 67.62805,-3.10828 c 7.76058,-13.90497 -14.65823,3.96184 -3.5254,4.46996 l 1.78808,-1.59043 z m -15.29535,-0.71576 c -3.34733,-3.26787 -2.53393,7.17565 0,0 z m -45.33333,-0.4306 c -3.3633,-5.2213 -3.6721,2.80282 0,0 z m 116.66667,-2.0787 c -5.59113,-4.69817 -1.92019,4.80932 0,0 z m -107.52432,-2.52041 c 2.18902,-6.72779 -10.55188,3.50448 0,0 z m 128.94334,-6.67427 c -12.03411,-3.77203 -5.08133,17.11741 0,0 z m -102.75236,5.19468 c 0.11185,-5.10846 -6.09767,5.38052 0,0 z m -85,-3.61822 c 14.26426,-8.47163 -20.18212,-6.39289 -7.33333,1.6347 l 3.39167,-0.87669 z m 45.1755,-7.94307 c 0.0563,-17.45573 -24.44081,12.90987 -0.99427,6.00383 2.9265,0.47802 -0.0252,-7.01382 0.99427,-6.00383 z m -14.56256,-2.44743 c 10.39057,-9.41051 -9.00567,-5.17169 -4.69862,1.58816 -15.27887,1.5136 -0.31711,6.22448 4.69862,-1.58816 z m 59.38706,2.45902 c -8.29706,-1.32267 -0.1034,2.30697 0,0 z m -136.93318,-1.89174 c 8.99081,-1.07868 48.40232,-1.07583 21.78058,-9.42436 -42.1474,-10.93521 -86.43512,-4.31874 -129.22816,-11.24426 -7.41581,-0.80058 -42.18344,-7.62339 -17.95769,1.4118 36.32806,11.07361 74.38616,16.2886 111.93481,19.25117 3.93466,2.0501 9.53565,2.05195 13.47046,0.006 z m 101.93318,-1.22522 c -6.25324,-7.7454 -5.48094,6.63085 0,0 z m 24,1.5 c -11.05783,-6.65962 -8.38889,2.20931 0,0 z m 119.26351,-2.75619 c 6.85189,-15.35546 -13.04523,9.56824 0,0 z m -99.26351,0.11459 c -2.72702,-9.55469 -15.39961,-18.35123 -11.06796,-2.19367 2.44578,0.44351 9.29015,5.06612 11.06796,2.19367 z m 47.02928,-2.68467 c 23.96922,-4.98004 28.91077,-30.71735 1.15962,-33.09523 -10.32623,-4.80583 -25.29164,-10.19933 -20.1889,8.08719 0.44244,11.53644 -0.0633,39.01456 19.02928,25.00804 z m -64.36261,-2.06468 c 6.98834,-13.23083 -14.72387,1.64172 -1.58648,1.7993 l 1.15822,-0.52514 z m -60.66667,-2.10905 c 9.96937,-0.55395 27.7759,-5.5358 6.19702,-4.39456 -70.37594,-4.77964 -140.17169,-15.73634 -210.40452,-21.84238 12.09408,14.85835 42.21653,8.8227 61.22096,12.82856 20.91606,2.36991 42.29716,1.36201 62.93404,3.03075 21.04231,0.45879 40.89654,8.16365 61.18076,12.6681 6.34165,0.39446 12.61031,-1.52086 18.87174,-2.29047 z m 43.66667,-0.88304 c -8.29705,-1.32267 -0.1034,2.30697 0,0 z m 49.68687,-5.37098 c 4.72926,-18.8866 -21.14356,4.39676 -1.85977,3.81262 z m -56.4202,3.32068 c -8.35242,-3.16629 0.17498,6.01042 0,0 z m 63.73333,-2.47869 c -3.46129,-6.97398 -2.3963,8.60206 0,0 z M 519.8802,233.1823 c -4.59283,-4.81134 -32.80638,-2.33313 -35.85595,0.28103 12.0431,-0.67613 23.91556,3.84166 35.85595,-0.28103 z m 22.08889,0.85368 c -6.04317,-11.62814 -3.90037,7.74904 0,0 z m 92.60394,0.37394 c 11.81751,-12.1319 -15.56155,5.17723 0,0 z m -174.54091,-5.22129 c 24.07738,-3.3975 49.05739,-0.39632 73.04368,-5.39665 10.11456,-3.34281 26.03538,-19.12835 4.75578,-11.8889 -24.20355,-0.13733 -47.84434,3.3847 -72.07213,3.52126 -42.54519,1.7373 -85.2018,-0.82188 -127.70509,1.52417 10.13856,4.97189 37.40056,4.53716 53.54314,7.56184 22.41076,1.87672 44.85694,6.3616 67.35272,5.42391 z m 231.24989,-7.56469 c -2.71711,-16.16865 -1.77968,19.38614 0,0 z m -131.64625,1.01468 c 11.72125,1.58622 3.26043,-26.41954 -6.05787,-7.69709 -17.68563,12.65824 -3.95342,7.63083 6.05787,7.69709 z m 63.33333,-11.52173 c 9.64008,-6.52754 -21.17822,-0.87702 -2.7873,0.59472 l 2.7873,-0.59473 z m -17.3611,-2.63184 c -4.34352,-1.46936 -3.58569,2.47604 0,0 z m 38.93774,-1.29027 c 26.8023,-8.88241 -30.78032,2.92553 -3.29192,0.41322 z m -37.72548,-6.57084 c 11.64507,-2.34987 -4.79154,-16.28175 -11.08897,-8.60165 -21.42723,3.36737 7.35737,12.0596 11.08897,8.60165 z m -24.85116,-0.66667 c -11.27206,-4.52061 -2.20754,5.10607 0,0 z m 47.40256,-4.10966 c 2.9635,-9.685 20.4572,2.30343 7.30966,-9.7248 -7.30095,-16.15021 -41.32627,2.99493 -17.36204,11.1314 4.13523,4.30831 7.47103,5.31506 10.05238,-1.4066 z" />
      <path
         id="path885"
         style="fill:#525557;fill-opacity:1;stroke-width:1.33333"
         d="m 612.55518,401.07251 c -11.40809,-11.28269 -24.64602,-17.16748 -39.64085,-8.91069 -8.69863,-0.69377 -16.73874,-12.69794 -25.48654,-9.77112 -10.37158,2.6467 -15.78225,17.06092 -27.23869,10.8358 -8.88029,-7.41614 -32.45082,-22.41182 -29.22264,-28.91904 13.16674,4.21143 30.85858,9.34457 29.84317,25.72737 10.6673,-1.58786 19.183,-21.71219 1.1154,-21.02642 -11.51528,-6.90948 -28.74397,-21.40264 -40.68325,-17.64837 5.32705,21.11957 -12.68935,-16.99061 -22.71684,-15.89293 -10.58057,-2.91001 -7.43785,16.68516 -20.00149,17.66673 -5.37621,3.5223 3.24809,-13.40259 -7.59842,-7.11973 10.88545,-8.68757 1.29278,-13.3122 -9.16442,-8.5185 -7.17509,-12.11766 -27.40881,2.94927 -30.7856,-1.10159 10.11781,-13.65903 26.2933,-19.38166 39.16449,-29.75577 6.54295,-1.65473 -17.96031,14.53937 -22.50276,21.24737 6.33737,0.92257 22.84263,-6.64849 29.93083,-12.78723 9.31355,1.1721 23.86767,-0.96283 29.27978,-7.65369 -15.02117,-0.1592 13.22297,-6.1748 -0.54722,-12.45017 -6.34835,-4.87261 -12.64368,-10.97124 -2.59036,-16.29254 -4.25685,8.85892 5.97692,8.48053 11.73332,14.10644 8.6205,-3.21897 20.84654,3.637 26.09124,0.84599 -10.00072,-7.67266 -21.42914,-16.09792 -34.61817,-19.64372 -8.90277,-2.39903 -13.35823,-10.31262 -17.33358,-18.22825 3.30673,-8.99473 -18.09279,0.24826 -23.87978,-3.47634 -6.76681,-0.51315 8.49652,-5.21251 9.30053,-8.36006 16.31288,2.98499 29.42135,14.7195 45.52531,16.14857 10.44454,1.4462 15.89653,-12.63479 25.1842,-1.70416 -8.87101,-14.60961 15.61944,-20.07479 22.63318,-30.10473 8.24687,-5.99051 13.09618,1.93778 3.85219,4.26485 -10.9293,-1.5826 -34.63696,27.44062 -17.53822,22.33294 8.06996,-2.12614 37.99652,8.90075 27.59837,-10.59779 -6.58289,-10.76878 9.67635,-5.95071 12.73768,-1.87662 4.35063,-6.25615 11.53626,2.75824 13.64016,-5.74887 0.45762,15.48665 13.00578,18.50251 24.54367,10.12963 8.10394,0.40321 10.53552,-0.80113 11.01943,-7.29252 4.54781,1.52482 23.23959,-0.23202 9.61462,-4.52456 -6.82798,-5.02894 21.44645,-1.02902 6.72311,-7.63274 -12.4513,3.27635 8.77008,-10.07804 -6.06671,-7.91426 -12.93973,-3.40739 -25.03913,-10.11596 -38.0424,-13.90524 1.63164,-0.98879 17.82359,-7.58625 24.52006,-1.87474 8.8289,1.25642 -16.50029,5.82224 1.88647,7.90329 17.30102,5.11514 31.58748,-2.12025 49.15892,-3.06137 8.73796,-11.25379 -18.44706,-5.96636 -23.91227,-1.24735 -6.87845,-2.19094 -30.24117,1.53841 -13.51655,-5.99094 9.9971,4.16262 14.45382,-2.78834 21.55407,-7.03655 10.18969,2.7883 13.2467,-4.58138 21.2167,6.34991 15.84845,14.13854 29.96683,-0.17912 38.66067,-13.54828 9.4902,12.52092 24.53449,25.18801 27.83235,39.98988 -5.07494,9.87348 -15.3235,21.74788 -5.93688,29.97325 -2.91821,10.75581 -13.42961,23.58229 5.27315,23.82295 19.20776,3.26816 -6.98818,-7.2555 -3.64568,-8.08086 14.47146,-5.12382 22.90728,14.42625 37.4061,12.95585 11.71631,1.98101 29.85802,-0.86374 38.14409,4.91045 -16.37609,-0.0756 -33.68786,0.59392 -48.96619,-0.9902 -3.31855,9.67481 -2.91202,20.58438 10.16901,12.87611 8.21012,-0.26354 -15.8114,8.97258 -21.42469,8.46197 -7.60231,0.65896 -17.20285,-11.59055 -10.76597,3.32391 -6.55604,6.83475 -27.00798,-17.71259 -35.90969,-0.0247 -10.06616,9.45058 14.14914,9.43422 4.29941,21.04561 -4.91874,11.4542 -0.93763,35.29862 -17.86507,33.7754 7.50522,17.15713 -14.32183,15.6623 -17.21691,15.07441 9.56692,10.54989 -6.70861,1.50023 -11.83535,6.38561 -5.30532,3.04345 -21.79256,-17.70241 -17.29474,1.30656 1.85973,7.75157 7.53133,28.95799 -6.07067,16.56362 -3.24875,-2.38728 -6.43463,-4.85813 -9.63308,-7.31186 z m 9.00086,-9.84858 c -1.93025,-6.76759 -16.37156,-37.18912 -14.4901,-15.17596 -8.35466,9.86294 14.2857,26.41283 18.66721,26.92249 -1.00937,-4.04032 -2.57014,-7.9145 -4.17711,-11.74653 z m -41.70397,-5.18769 c 12.70799,-8.92128 -27.91748,-28.19987 -13.11627,-6.81446 3.15469,4.77504 7.23375,15.17406 13.11627,6.81446 z m 11.77207,-13.12297 c -1.44907,-7.87446 -18.76076,-19.29527 -25.85435,-18.29703 4.14217,14.14331 17.61351,11.79605 23.8762,19.91057 z m -51.03244,-6.28054 c 15.48516,-18.02391 -18.79441,-20.69219 -29.73165,-28.01322 -9.27788,-0.59217 -37.21053,-21.24676 -32.315,-1.05877 6.06497,13.15707 21.86749,7.48428 33.88564,9.39164 11.61372,-2.22892 5.84573,22.91509 20.92407,20.99514 2.45487,-0.0462 4.9893,-0.1824 7.23694,-1.31479 z m 19,-1.68037 c -5.38503,-8.05997 -4.71331,7.78679 0,0 z m 120,-5.25464 c -11.8258,-9.05552 22.94356,-33.56454 3.92739,-30.90151 -4.34648,12.21957 -13.05546,16.27545 -25.67972,12.50655 -13.09604,10.68722 15.30641,10.88698 19.44359,19.95815 l 1.73463,0.0393 z M 551.38224,349.03963 c -2.3318,1.4951 -22.4992,-13.67611 -10.94339,-1.84309 2.76211,1.25539 9.80614,8.40905 10.94339,1.84309 z m 122.6529,-11.92848 c -0.9913,-13.1 -17.25064,-0.0156 -2.01571,2.61148 l 1.27884,-0.73222 z m -103.81415,0.55918 c 1.09385,-7.39804 -13.18892,3.82085 0,0 z m 26.69304,-0.38464 c -4.47796,-7.25202 -18.71413,-9.05891 -5.64918,0.17941 0.97674,0.93508 5.68732,2.86107 5.64918,-0.17941 z m -77.32233,-5.80932 c -6.58117,-7.59497 -6.11076,9.75988 0,0 z m -88.77572,1.33334 c 5.58044,-4.42795 11.00059,-12.52086 0.77572,-6.67956 -2.63773,1.96127 -10.12407,9.31715 -0.77572,6.67956 z m 122.82262,-1.34403 c 9.31263,-10.65148 -15.14377,-5.80742 -16.29644,-15.04693 -16.13402,-3.81487 -2.20836,14.70504 6.65423,11.30681 2.47807,3.6425 4.88274,8.49052 9.64221,3.74012 z m -44.11334,-5.73916 c -1.0452,-13.6042 -28.54144,-6.0905 -8.6807,0.86388 2.74573,0.34492 6.40644,1.24574 8.6807,-0.86388 z m 66.06644,-11.44083 c -6.73332,-8.06153 -6.66894,7.83101 0,0 z m -88.33295,-5.66596 c -5.44553,-10.06316 -9.44435,8.26633 0,0 z m 17.66628,0.33263 c -0.11867,-7.99402 -8.05515,6.43004 0,0 z m 105.81551,0 c -6.89241,-6.97642 -2.78741,6.80017 0,0 z m -53.91228,-9.51315 c 11.21679,-16.21321 -22.24955,3.44008 -2.55427,2.41345 z M 535.5917,298.207 c -6.63862,-7.87172 -3.32598,9.96065 0,0 z m -38.23379,-14.79863 c -1.33489,-10.55651 -12.05588,4.24168 0,0 z m -9.76621,-8.4091 c -6.19198,-13.65923 -14.53422,3.68237 -0.69529,1.90926 l 0.69522,-1.90926 z m 14.41748,0.28642 c -3.86305,-2.85973 -16.98596,-17.57217 -13.4775,-4.48798 1.87567,1.4622 13.72454,10.18188 13.4775,4.48798 z m 12.24918,1 c -9.42126,-4.24094 1.58296,5.05712 0,0 z m 40.45458,-2.66666 c 13.64974,-6.12984 -3.29642,-15.38721 -8.54295,-4.1309 -8.55581,-10.94809 -21.63999,14.02653 -7.35456,3.9789 6.67032,-8.40958 7.63654,14.0753 15.89751,0.152 z m -81.78791,-3.91552 c 5.23917,-3.87435 14.18004,-6.39621 1.05151,-6.1147 -6.49088,2.50047 -19.00165,3.52515 -3.75354,8.04233 1.36289,1.31584 3.49996,-0.33407 2.70203,-1.92763 z m 55.07045,-1.5937 c 8.88848,-13.02556 -5.75396,-3.85304 -11.78515,-8.87992 -7.57102,-0.0569 10.93794,20.02895 11.78515,8.87992 z m 84.67119,1.22352 c -2.56357,-8.28574 -21.42433,-1.96903 -6.1251,2.21184 2.0276,0.63994 5.62369,0.57766 6.1251,-2.21184 z m -99.28127,-0.43777 c -3.20257,-10.98402 -28.5638,-4.67497 -12.57148,-0.51615 3.3962,-1.61131 12.45373,5.65854 12.57148,0.51615 z m 68.87296,0.72347 c -3.59,-5.37333 -3.14222,5.19118 0,0 z m 46.66667,-1.25774 c 10.73577,-6.97255 -1.20349,-19.35608 -7.0165,-7.0077 -4.05071,2.78548 7.19227,14.13506 7.0165,7.0077 z m -38.97223,-5.15893 c -3.93916,-5.90839 -4.61192,6.74164 0,0 z m 8.30556,-0.25 c -3.19318,-5.32687 -2.12642,4.95859 0,0 z m 21.8786,-1.13691 c -3.42188,-13.38509 -13.03349,1.52246 0,0 z m -8.54526,-2.86309 c -4.90959,-5.36579 -5.11522,5.21589 0,0 z m -5.33334,-4.11111 c -4.27543,-7.79048 -4.22515,9.11302 0,0 z m 69.23452,-4.2972 c -13.76287,-18.46444 1.45677,17.14277 0,0 z m -107.90118,1.21763 c -10.25243,-12.66967 -11.65611,7.13972 0,0 z m 76.59829,-3.78297 c 7.95871,-15.33551 -20.28662,3.32808 -4.61069,4.31362 l 2.40309,-1.82837 z m -91.26496,-0.21703 c -7.48308,-10.89352 -6.02151,7.26125 0,0 z m 157.95505,-8.75965 c 4.36742,-20.15766 -13.27262,9.03002 0,0 z m -74.28838,-2.70172 c 14.29429,-14.85274 -21.76154,-0.36044 -3.38542,1.81981 z m 13.66666,-3.34795 c -6.7333,-8.06154 -6.66893,7.83102 0,0 z m 5.33334,0.66667 c -3.59001,-5.37332 -3.14223,5.19118 0,0 z m 38.0862,-11.45358 c 3.36333,-12.2358 -6.37261,-12.02539 -6.59264,-0.90124 -0.25531,9.25569 7.48491,17.69565 6.59264,0.90124 z m 25.9138,8.19894 c -3.36331,-5.22129 -3.67209,2.80281 0,0 z m -56,-8.60271 c -7.76731,-13.11524 -6.24809,8.8754 0,0 z m -27.51783,-4.80932 c -6.8924,-6.97642 -2.7874,6.80017 0,0 z m 8.85116,-1.33333 c -5.38503,-8.05997 -4.71331,7.78679 0,0 z m 40,-0.77778 c -4.27544,-7.79048 -4.22515,9.11302 0,0 z m 13.11808,-11.10484 c -1.61184,-25.68125 -11.311,11.58933 0,0 z m -338.89288,157.8318 c 10.83307,-9.60328 27.88877,-4.13988 41.72814,-4.53161 9.16391,14.53115 32.39222,-13.76952 9.24242,-7.83861 -11.11863,2.90406 -20.32234,-11.4055 -4.38352,-8.31563 4.23214,10.22187 22.72518,-5.49603 22.53658,12.15541 8.31635,7.2137 -13.08428,7.60819 -18.34372,11.13412 -13.86557,-1.25014 -28.25566,-6.14022 -41.85164,-0.21256 -2.31908,-0.0783 -14.35537,5.20488 -8.92826,-2.39112 z m 23.7748,-27.7867 c -11.84641,-8.08739 13.61185,2.29652 0,0 z m 66.66667,-27.30708 c -33.7954,-21.69571 12.55299,-7.72075 7,3 -2.474,-0.64558 -4.74457,-1.83524 -7,-3 z m 40.78486,-62.20082 c -25.25978,-4.13033 22.4711,-3.01688 3.62711,0.73192 z m 51.21514,-15.98796 c 2.02218,-5.07817 4.07131,4.22189 0,0 z m 22.33333,-22.3639 c -10.06607,-6.87735 18.06854,-7.26534 4.33339,-0.3949 l -1.82291,0.48027 -2.51042,-0.0854 z"
         sodipodi:nodetypes="scccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccsscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc" />
      <path
         id="path883"
         style="fill:#383c41;fill-opacity:1;stroke-width:1.33333"
         d="m 623.0159,386.32398 c -0.48503,-9.09106 -19.04219,-31.40684 -15.34656,-10.77085 -3.58552,11.66975 -17.29085,9.76702 -25.35955,12.9123 16.38367,-7.18757 -20.66086,-24.80158 0.0467,-15.80494 8.15728,8.01059 14.30306,1.3399 17.93113,-6.32716 -2.79794,-6.5015 -6.6318,7.11725 -11.07527,-3.21667 -9.0533,-8.1888 -25.82771,-15.19798 -31.13987,-5.86741 -8.01239,11.5766 8.75629,13.09868 9.6355,25.28867 10.25938,15.42589 -17.00468,-9.71332 -24.38064,0.60818 5.09711,-5.75626 4.04345,-15.52926 -2.27598,-5.69415 -3.1841,4.2993 -18.23042,25.98008 -10.52666,10.5213 7.24975,-5.13208 9.38904,-15.65695 3.36004,-17.56462 12.84188,2.50407 18.34118,-15.19145 22.01278,-23.79288 -8.92726,0.16441 -17.84589,-6.83837 -25.54786,-7.33394 -9.56616,-6.69799 -24.39542,-32.41107 -36.7287,-18.37755 -9.21918,13.34692 25.64808,0.45499 22.65398,15.89813 16.04775,8.32871 -12.96811,-3.08378 -18.69496,-5.53291 -10.56535,-6.91281 -29.39254,-3.19438 -16.17474,10.8371 6.48378,12.05164 -7.03648,8.28528 -10.00623,-1.1221 -8.53971,-11.49176 -20.75074,-8.17657 -22.06185,3.86612 -13.85073,15.57096 -7.84258,-10.56069 -5.28449,-19.63424 -9.18115,-12.42601 -17.72251,13.6985 -20.94002,9.0038 -16.17684,-6.0237 13.18922,-10.65187 18.84499,-16.39625 12.76871,2.00021 30.19206,-3.20538 32.55344,-15.84912 -0.33473,-5.60184 -9.95157,-12.22971 2.10809,-6.69881 6.48727,3.07568 24.11527,-3.0737 23.97272,5.57221 -16.16315,8.27019 4.39797,14.76766 13.6644,12.86959 15.01703,-2.96741 -16.48753,-8.14036 -13.08026,-8.51985 14.11324,-4.84028 -10.24196,-24.82329 5.61311,-16.72089 4.42337,-4.85345 17.30145,4.99174 14.16777,-5.78619 -17.12099,-0.1022 9.38943,-1.26737 -1.96254,-10.16939 -5.8889,-16.49786 9.01805,15.27761 12.50423,-2.5649 4.90943,-10.62527 8.45095,-12.18788 19.84775,-13.10118 5.55144,-12.417 17.34207,5.68023 27.90326,-2.51458 12.44043,-5.08965 26.74263,-3.61822 36.27776,-11.24511 5.74237,-0.20895 26.63541,-6.82842 24.87601,-0.85447 -4.90697,2.2301 -28.71778,9.72279 -11.03073,7.97687 14.12725,-5.5711 -5.88725,13.12752 -12.33379,5.44857 -4.91187,-3.86196 -18.10766,-5.09315 -12.3364,4 11.68222,8.23636 -15.02351,-2.849 -20.0815,-0.75685 -12.84695,-2.56177 -6.32907,5.2109 1,6.75686 -10.33476,2.69893 -0.056,14.28011 4.08411,2.54401 10.82158,-11.05689 12.36408,16.57739 23.17053,6.12266 7.77175,3.20616 14.36838,2.39876 4.552,-2.42649 -3.20221,-13.1627 14.49857,8.06644 21.77904,2.8832 16.97631,3.2813 1.99536,-6.36786 -5.24452,-6.84821 6.07399,-0.0318 9.7266,-4.16193 3.75399,-10.69858 10.55848,-8.7044 1.65724,4.69004 14.00127,4.2813 10.22746,-3.60056 15.78418,-25.00316 7.90358,-30.52456 -1.514,-7.54845 -14.93995,2.93748 -22.5599,-3.07898 -11.44742,5.5166 -4.14277,1.46268 -5.95523,-5.35248 -8.36915,-1.86977 -16.69238,-6.8054 -2.63012,-6.71053 7.67402,7.5932 20.35519,10.03756 25.64158,0.13715 3.2137,3.96745 12.91619,17.59312 13.37684,4.87926 -11.29016,-5.44726 -7.57856,-19.2513 4.55158,-12.00274 9.26786,2.34946 19.05307,-4.78555 20.90144,-11.89379 -1.01899,7.69234 5.97338,18.22725 -7.58909,14.31951 -17.16971,-2.86394 6.92948,11.88432 3.74941,19.72431 6.74863,15.57487 10.74449,-16.93649 15.73514,0.53997 1.86075,6.67965 -4.73211,15.88814 7.50603,10.57073 10.02734,-8.6023 -7.93901,-24.69533 -14.53124,-23.15564 -2.92942,-9.23063 8.88919,-16.71338 8.82141,-3.62902 10.92222,11.09174 16.39864,23.11389 5.64881,36.3976 0.86679,6.38321 10.80936,3.51448 4.0338,12.28279 -1.40953,12.20263 -9.04747,6.14523 -14.21847,5.70062 4.62277,11.94345 25.39859,9.40582 29.70815,19.0071 -5.72393,-1.31756 -20.18125,-3.98365 -6.4259,1.85165 5.08035,6.22586 12.52306,7.99945 15.3416,16.23891 9.60534,3.00205 -11.57981,4.11292 -14.54408,-1.87155 -12.46744,-2.03823 5.83942,17.72918 -9.22843,7.53551 -14.93936,-4.44508 7.92422,-11.05048 -5.83736,-11.53012 -5.82709,-1.50778 -37.03882,-5.27876 -20.82931,2.98806 13.69393,3.26162 -6.26055,4.12792 -4.13271,13.71174 3.97439,8.64553 -0.48257,9.14429 -5.86738,15.20931 -1.70011,15.18313 -2.27579,-9.26933 -12.58325,-1.77182 -10.33489,3.45236 9.27094,13.08619 -6.08326,9.68512 -8.51322,-1.70618 -18.50715,2.43187 -8.00016,8.25916 3.3915,7.85794 10.32026,24.87254 18.30939,27.32874 8.19073,-11.23421 -16.91317,-17.05268 -10.23062,-22.43722 6.85016,-1.98148 23.8854,19.99085 19.67364,1.83234 -0.94845,-5.79629 17.31265,-30.05438 9.57517,-13.05068 -2.77569,11.24774 -1.79903,29.23821 -17.2329,25.05326 3.89133,9.37254 -0.96398,22.90859 -12.41742,14.14783 -9.06995,0.0591 2.00813,10.86019 -11.72039,6.16212 -4.09165,0.29441 -14.13184,-3.47585 -4.29239,-3.39768 -4.39181,-5.96452 -24.39719,-15.78434 -22.88812,-9.55629 10.82497,-0.0275 3.9655,19.70947 6.22722,23.14619 -2.12161,-3.85792 -3.85566,-7.91283 -5.60852,-11.94646 z m -24.85322,-9.53928 c 8.06983,-13.38514 -16.18261,16.74339 -1.15421,1.77289 z m -34.50036,2.94892 c -7.00908,-3.06622 1.86007,5.64655 0,0 z m 88.70472,-9.06696 c -0.40697,-11.72636 -32.29576,-17.35636 -13.83368,-4.33333 2.39256,1.93921 14.57865,11.00708 13.83368,4.33333 z m -27.41277,-8.33333 c -5.78975,-4.93319 -0.68487,4.51116 0,0 z m -8.91552,-5.01092 c -3.94959,-15.05156 -7.81211,16.16306 0,0 z m -21.08448,2.34425 c -4.93403,-5.07952 -3.13482,4.43808 0,0 z m 34.56815,-5.88129 c 0.18493,-10.70486 -11.00047,6.64894 0,0 z m -15.90148,-5.5693 c -13.89686,-11.77484 -8.12104,9.66441 0,0 z m 30.0718,0.66775 c -0.55951,-10.33981 -15.96972,6.48764 0,0 z m -73.05915,-1.55049 c -4.03864,-7.23842 -26.54434,-7.77099 -9.00141,-0.94916 2.11474,0.22386 8.66679,5.14952 9.00141,0.94916 z m 58.23388,0.36633 c 10.09813,-5.81579 -7.2938,-19.04633 -6.48505,-3.69967 -2.39093,5.83786 3.16246,5.60155 6.48505,3.69967 z m -39.24653,-5.36633 c -5.84993,-4.52712 -17.559,3.30988 -3.87422,1.21563 1.14642,-0.42022 3.08444,0.0602 3.87422,-1.21563 z m 10.36806,-4 c 0.76462,-10.50222 -25.45909,-11.11445 -10.70762,-1.81229 2.10581,3.84724 9.41023,9.42451 10.70762,1.81229 z m -24.51922,1.70672 c 23.12704,-7.78189 -25.54708,-9.12181 -11.79757,0.87105 3.92277,0.0502 8.00612,0.40299 11.79757,-0.87105 z m -19.92506,-5.83843 c 13.08312,-10.10014 -13.32616,-17.40631 -20.97911,-19.10797 -16.72688,4.97418 12.04196,29.26057 20.97911,19.10797 z m -11.25712,-2.53496 c -3.43921,-4.85814 7.33015,4.26151 0,0 z m 113.96104,2.62361 c -3.65195,-13.69646 -35.09986,-1.9114 -13.46283,0.43343 2.55743,-0.10292 18.8793,5.50816 13.46283,-0.43343 z m 11.45995,-6.67051 c 7.2849,-10.10824 -31.48075,-5.25869 -9.492,0.64168 3.08901,0.86416 6.60214,0.95268 9.492,-0.64168 z m -146.01125,-3.39544 c -10.05849,-6.39758 -1.10869,4.9113 1.89938,1.77763 z m -45.51879,1.2997 c 8.2393,-14.75721 -17.32555,1.26918 0,0 z m 130.8548,-0.65196 c -0.65126,-11.42708 -31.2899,-0.47646 -10.51476,-0.14823 3.28786,-0.26662 7.9571,3.34457 10.51476,0.14823 z m 15.64024,-3.87339 c -6.19363,-8.64433 -0.6611,11.12556 0,0 z m -39.5456,-1.66533 c 2.36976,-11.38314 -22.11984,-9.05491 -11.00024,-0.25432 3.90597,-3.34822 12.03505,7.57495 11.00024,0.25432 z M 460.2876,319.8889 c -3.14888,-7.68096 -5.36788,4.54253 0,0 z m 7.74912,-1.9042 c -5.52041,-8.95388 -6.25295,9.31597 0,0 z m 58.00404,1.17778 c -5.63415,-16.16141 -15.83343,8.85568 0,0 z m 152.67291,-1.14885 c -7.97624,-12.15089 -3.91741,11.29999 0,0 z M 564.2876,316.53999 c -3.50999,-13.20066 -28.78308,0.001 -7.37389,0.5468 1.92585,-0.62121 7.23941,3.38402 7.37389,-0.5468 z m 37.79108,-2.55568 c 5.56638,-11.6478 -20.31285,-1.51581 -3.5886,1.55477 l 1.70407,-0.4149 z m 14.80582,0.46192 c -0.83138,-11.40061 -17.05095,-9.30171 -5.76433,-0.01 1.38848,1.01933 4.55176,2.02256 5.76433,0.01 z M 490.2876,309 c -2.35588,-6.77347 -21.05407,-14.60835 -10.38004,-0.1045 2.13023,3.21142 10.39962,6.95604 10.38004,0.1045 z m 82,-1.6 c 5.13797,3.31417 11.5789,-0.98056 2.08506,-5.55204 -11.72516,-13.05177 -11.60068,13.66912 -2.08506,5.55204 z m 19.73334,0 c 5.65644,-13.96496 -15.11229,7.26665 0,0 z m 58.26666,-2.48845 c 2.58048,-4.62487 -20.01152,5.14458 -5.31093,1.53528 l 2.05677,-0.51408 z m -107.33333,0.2933 c -1.36354,-8.51797 -15.2805,-12.45585 0.0695,-13.10564 6.4228,-6.04839 -21.03073,-2.99636 -12.09659,8.22543 2.3073,2.91729 8.56826,7.43837 12.02711,4.88021 z m 14.73288,-0.90575 c 9.45255,-3.21243 9.16071,-17.59916 -2.47477,-10.40943 -13.1798,2.1313 -10.1273,17.14939 2.47477,10.40943 z m 64.67685,-1.40812 c -17.26071,-6.86097 7.1879,8.44065 0,0 z M 525.29428,302 c -8.89627,-8.16762 -7.51742,7.26816 0,0 z m 81.65999,0.47599 c -5.12495,-7.30257 -8.31331,5.21046 0,0 z m -93.33333,-1.25376 c -3.14891,-7.68097 -5.36786,4.54256 0,0 z m 126.53246,-1.07829 c 6.6902,-8.25722 -34.87275,-7.04137 -11.74285,0.37128 3.78761,2.04656 8.19783,2.5257 11.74285,-0.37128 z m 36.12207,0.20401 c 4.49602,-17.88565 -12.95004,-22.35582 -24.09043,-31.00025 -11.7373,-2.43838 7.52264,15.15705 10.76923,19.19311 1.82678,3.83197 7.91579,18.17356 13.3212,11.80714 z m -65.3212,-6.01461 c -6.42588,-9.85371 -6.0234,9.45936 0,0 z m -20,-2.43768 c -4.92418,-4.69598 -25.00465,-5.02714 -9.4643,0.50598 2.90356,0.12235 7.10756,1.62977 9.4643,-0.50598 z m 98.91249,-10.26684 c 4.94466,-7.40215 6.34727,-17.32576 -3.88458,-7.40185 -9.46831,5.84886 -2.12595,29.18392 2.77821,9.68609 z m -161.62762,5.42958 c 2.06859,-12.34643 -11.88781,7.24321 0,0 z m 83.3818,0.60827 c -6.95943,-5.24765 -4.73389,5.356 0,0 z m 22.59628,-1.44721 c -6.5461,-2.98804 0.0626,6.75663 0,0 z m 7.16814,-3.40989 c -10.34914,-15.11491 -3.51434,8.62907 0,0 z m -95.20886,-1.47623 c 12.60641,1.89605 27.26254,-10.8018 10.98269,-18.73785 -10.14279,-3.29065 -31.30758,9.3622 -25.79451,16.55934 4.59383,1.25845 10.08223,4.65684 14.81182,2.17851 z M 601.31538,280.75 c -4.59005,-8.80206 -23.02189,2.60016 -6.91667,1.58334 1.60348,-0.68268 6.24679,0.92612 6.91667,-1.58334 z m -24.43547,-4.96301 c -1.79995,-17.77487 -14.72113,4.80959 0,0 z m 103.14103,-11.05366 c 9.00956,-8.59481 -12.39824,-31.60737 -10.47571,-14.25278 4.1676,4.79361 9.52138,10.93049 7.92224,15.79493 z m 14.9001,-3.83179 c 14.88512,-7.3231 -17.02801,-5.4691 -7.28344,2.59977 2.5705,-0.42866 4.92136,-1.57077 7.28344,-2.59977 z m -26.17333,-7.29239 c -4.24342,-5.7304 1.22668,6.88084 0,0 z m 14.20656,-9.86813 c -6.49881,-16.61265 -11.52173,-0.47329 0,0 z m 14,-2.09262 c -8.85009,-11.74195 -5.83566,10.95083 0,0 z m -24.31409,-0.11213 c 0.2167,-11.75181 -10.13385,2.20186 0,0 z M 685.3696,234 c -3.66109,-14.84113 -7.49114,7.27114 0.79723,3.48906 z m -6.41533,-8.37517 c -1.56648,-5.49905 -7.01835,-12.66523 -10.39074,-7.23765 6.80203,0.58053 1.94892,15.03843 10.39074,7.23765 z M 512.74994,384.38627 c -6.92988,-6.42917 -4.34372,-5.30426 0.14614,-4.16961 -7.94255,-10.55915 11.57881,-0.36793 6.0729,7.47736 3.75446,7.00864 -5.54825,-3.20823 -6.21904,-3.30775 z m -11.92235,-10.24385 c -7.26918,-4.21089 -11.60585,-11.89679 -0.53999,-4.73952 2.01195,3.36766 8.18061,11.46246 0.53999,4.73952 z m 22.04465,-7.96236 c -7.88895,-7.95381 -25.61626,-12.26529 -30.49897,-17.73289 8.64916,0.1202 17.27809,0.77995 25.91433,1.21949 0.84062,10.91465 1.0051,8.25075 -6.89201,1.55282 -21.52894,-3.03876 5.15958,7.97928 11.88529,11.30187 4.4693,2.59124 4.88908,10.44286 -0.40864,3.65871 z m -159.65613,-2.63427 c 3.99306,-5.23398 26.47753,-6.53119 10.07149,-1.27461 -2.35301,-0.67645 -9.93427,5.07521 -10.07149,1.27461 z m 32.73816,-2.19252 c -14.84748,-1.33649 5.69424,-5.80684 7.77682,0.41988 -2.22514,0.80543 -5.34958,-0.71109 -7.77682,-0.41988 z m 6.96805,-31.65364 c 10.8176,-10.8 -0.46598,7.36379 -3.88897,4.01239 z m 335.51563,-37.2828 c -5.45512,-3.22522 -2.02148,-19.837 6.08191,-8.78052 9.4873,6.15272 -8.41658,0.56108 -0.26245,8.72781 0.42007,4.13024 -4.56083,-0.0897 -5.81946,0.0527 z m 50.84965,-1.6332 c 5.28946,-1.12897 4.47187,2.09916 0,0 z M 755.62094,289 c 5.56537,-3.63442 18.24469,0.65056 3.55496,1.15397 l -2.2669,-0.2885 z M 504.2876,281.64857 c 3.9378,-4.96931 -1.13739,-17.64793 5.79489,-6.09269 1.67084,5.22549 -0.11073,8.66135 -5.79489,6.09269 z m 225.33334,-5.42631 c -6.44922,-6.77342 12.85327,5.9504 0,0 z M 611.95427,264.11695 c 5.29062,-1.12866 4.47054,2.09896 0,0 z m -156.66116,-2.9741 c -4.87438,-11.6565 32.91237,2.74624 13.54657,1.60999 -4.42218,-0.15658 -9.61143,0.9892 -13.54657,-1.60999 z m 194.68195,-14.38994 c -4.03893,-7.60082 -0.87414,-10.96349 7.59169,-7.41957 -0.65404,1.1244 -8.05033,12.18026 -7.59169,7.41957 z m 71.80852,-19.55693 c -2.45866,-11.67536 -16.96221,-24.05264 -20.01852,-26.82999 -1.89242,-4.84931 -9.78797,-15.75015 -0.3568,-7.12739 5.17527,11.40714 25.18156,25.02961 21.66881,34.94197 z M 611.1758,217.16512 c 0.42574,-7.0323 10.90395,4.1661 0,8e-5 z m 37.47051,-5.08912 c 7.75948,-1.14101 1.53416,2.21264 0,1e-4 z m -61.39655,-4.19851 c 3.6415,-7.59234 17.07032,-3.73989 3.88318,0.94755 l -1.90862,-0.0561 -1.97456,-0.89141 z m 32.70451,-3.76053 c 5.29062,-1.12867 4.47054,2.09895 0,0 z m 12.33333,-0.9743 c 4.42343,-4.68707 5.93832,2.51109 0,0 z m 6.41667,-1.72014 c 8.19889,-1.33751 -2.477,2.57917 0,0 z m 7.58333,-1.38733 c 14.79207,-5.85564 1.57664,2.90587 -1.73729,0.42709 l 0.92937,-0.22844 0.80792,-0.19859 z"
         sodipodi:nodetypes="sccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccsscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccsccsscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccsccssccccccccccccccccccccccccscscccscccsccccccccccc" />
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
